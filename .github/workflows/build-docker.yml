name: Reusable - Build & Push Docker

on:
  workflow_call:
    inputs:
      REF:
        description: "Branch"
        required: false
        default: "main"
        type: string
      DOCKER_FILE:
        description: "Path to Dockerfile"
        required: false
        default: "./Dockerfile"
        type: string
      CONTEXT:
        description: "Docker build context"
        required: false
        default: "."
        type: string
    secrets:
      GHCR_TOKEN:
        required: false
      IMAGE_REGISTRY:
        required: false
      IMAGE_REGISTRY_USERNAME:
        required: false
      IMAGE_REGISTRY_PASSWORD:
        required: false
      CHECKOUT_REPOSITORY:
        required: false
      CHECKOUT_SSH_KEY:
        required: false
      IMAGE_REPOSITORY:
        description: "GitHub repository path (e.g. org/repo)"
        required: true
      IMAGE_TAG:
        description: "Image name (e.g. latest)"
        required: false

jobs:
  build-docker:
    runs-on: ubuntu-latest

    if: ${{ github.repository == 'szen7dev/trixgo-builds' && github.event_name != 'pull_request' }}

    permissions:
      contents: read
      packages: write

    env:
      DOCKER_BUILD_RECORD_UPLOAD: false
      GHCR_ENABLED: ${{ secrets.GHCR_TOKEN != '' }}
      IMAGE_REGISTRY_ENABLED: ${{ secrets.IMAGE_REGISTRY != 'ghcr.io' && secrets.IMAGE_REGISTRY != '' }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          repository: ${{ secrets.CHECKOUT_REPOSITORY }}
          ref: ${{ inputs.REF || 'main' }}
          ssh-key: ${{ secrets.CHECKOUT_SSH_KEY }}
      
      - name: Authenticate with GitHub Container Registry
        if: ${{ env.GHCR_ENABLED == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Authenticate with Container Registry
        if: ${{ env.IMAGE_REGISTRY_ENABLED == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.IMAGE_REGISTRY }}
          username: ${{ secrets.IMAGE_REGISTRY_USERNAME }}
          password: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image tags
        id: vars
        run: |
          TAGS=""
          if [ "${{ env.GHCR_ENABLED }}" = "true" ]; then
            TAGS="ghcr.io/${{ secrets.IMAGE_REPOSITORY }}:${{ inputs.IMAGE_TAG }}"
          fi
          if [ "${{ env.IMAGE_REGISTRY_ENABLED }}" = "true" ]; then
            TAGS="${TAGS}${TAGS:+$'\n'}${{ secrets.IMAGE_REGISTRY }}/${{ secrets.IMAGE_REPOSITORY }}:${{ inputs.IMAGE_TAG }}"
          fi
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.CONTEXT }}
          file: ${{ inputs.DOCKER_FILE }}
          push: true
          tags: ${{ steps.vars.outputs.tags }}
